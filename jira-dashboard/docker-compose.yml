version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jira_dashboard
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d jira_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/jira_dashboard
      JIRA_BASE_URL: ${JIRA_BASE_URL:-https://your-domain.atlassian.net}
      JIRA_USERNAME: ${JIRA_USERNAME:-}
      JIRA_API_TOKEN: ${JIRA_API_TOKEN:-}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        python -c 'from app.database import engine; from app.models import Base; Base.metadata.create_all(bind=engine)' &&
        python -c 'from app.mock_data import generate_mock_data; import asyncio; asyncio.run(generate_mock_data())' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000

volumes:
  postgres_data: